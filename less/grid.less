/*
Default variables;
change this to your liking.
*/

@total-columns: 12;
@column-width: 	60px;
@gutter-width: 	20px;

// clearfix
.clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}



//  box sizing border-box
*,
*:before,
*:after {
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}


// grid function


	.mdgrid(@prefix:desktop, @total-columns:@total-columns, @column-width:@column-width, @gutter-width:@gutter-width) {

		// calculate total width of the container
		@total-width: (@column-width * @total-columns) + (@total-columns - 1) * @gutter-width;

		// loop generate column names and values
		.generateCols (@index) when (@index > 0) {

			.@{prefix}-@{index} {
				.col(@index, @column-width);
			}

			.generateCols(@index - 1);
		}

		// loop generate offset names and values
		.generateOffsets (@index) when (@index > 0) {

			.@{prefix}-offset-@{index} {
				.offset(@index, @column-width);
			}

			.generateOffsets(@index - 1);
		}

		// column function
		.col (@columns, @columnwidth) {
			width: (@columnwidth * @columns) + (@columns - 1) * @gutter-width;
		}

		// offset function
		.offset (@columns, @columnwidth) {
			margin-left: (@columnwidth * @columns) + (@gutter-width * (@columns + 1));
		}

		// create row class
		.row {
			margin-left: -(@gutter-width);
		}

		[class*="@{prefix}"] {
			float: left;
			min-height: 1px; // prevent collapsing columns
			margin-left: (@gutter-width);
		}

		// create container class
		.container {
			width: @total-width;
		}

		.generateCols (0) {}
		.generateCols(@total-columns);
		.generateOffsets (0) {}
		.generateOffsets(@total-columns);

	}



// defaults
.row {
	.clearfix;
}

.container {
	.clearfix;
}
